ID: TheaterTicketingConfirmation
Description: This test case verifies the online theater ticketing system can generate a unique confirmation number for a customer who purchases a ticket. It is a test designated to unit testing. The confirmation number will reference each transaction that the customer makes. The ticketing confirmation test will ensure that the confirmation number will be generated regardless of whether the customer decides to select multiple seats, use different payment methods, or purchase tickets to different showtimes.
Test Sets/Vectors: This test is designed to execute the booking process successfully. There are different approaches to be taken such as selecting tickets for one movie or multiple movies. Another approach includes using a different payment method than the one listed. The test is done using a low volume of requests as well as a high volume of requests. The tests will be done through web browsers on phones as well as through PCs to ensure consistency across all supported devices. 
How does it cover the targeted features?:The test covers several targeted features of the online theater ticketing systems. It ensures that compatibility with the web browser works successfully, the payment interface takes different types of information, and most importantly that the ticket booking interface works successfully and leads the customer to its final destination, which is the transaction confirmation page. Also, it covers the functional requirements of the ticket payment feature, which is being used under a web browser. This ensures successful inputs and processing. Another functional requirement that it follows is that a maximum of 20 tickets may be purchased at a time. Therefore, a unique booking jumper should not be processed if a user attempts to purchase more than 20 tickets within one transaction.
ID: SearhCriteria
Description: This test case verifies that the online theater ticketing system successfully generates and displays shows and showtimes related to a user’s search based on certain criteria such as date, time, genre, etc. It is a test dedicated to functional testing. This test case being successful is necessary to ensure users are provided with shows and showtimes based on their preferences regardless of what they are and how many there are. 
Test Sets/Vectors: This test is designed to generate and display shows and showtimes based on a user’s specific search criteria. One test set includes searching by date. Approaches to this include searching a specific date and another approach includes searching a date range. Another test set is searching by time. Approaches taken for this test set include searching by a time slot such as morning, afternoon, night or searching a specific time, which will display shows being shown at that exact time. Lastly, a test set may be searched by genre. In this case, approaches taken can include searching one specific genre or searching several genres. 
How does it cover the targeted features?: The test covers several targeted features of the online theater ticketing system. However, the most important one that it covers is the movie selection interface as well as the web browser, which is utilized by the user to search on. It also covers the functional requirements of ratings and reviews. Users may search up certain reviews to help them select a movie as well. Therefore, this functional case supports the test case through inputs and processing.
ID: BookingHistory
Description: This test case verifies that the online theater ticketing system supports a user attempting to access their booking history as well as any tickets they may possess for future showtimes. It is a test dedicated to functional testing. This test case is crucial for users to access and view their previous purchases and shows that they attended as well as access and view their upcoming events. 
Test Sets/Vectors: This test is designed to display a user’s previous and upcoming booking information. One test set includes viewing the booking history. This test set takes approaches that ensure that users are able to successfully log in and access their booking history as well as checking for filtering options to allow a user to conveniently find a specific booking. Another test set includes accessing upcoming show tickets. This test set takes approaches that ensure that users are able to successfully login and navigate their upcoming shows. This will include information about the show title, time, date, seat number, theater, and ticket price.
How does it cover the targeted features?: The test covers several targeted features of the online theater ticketing system. This includes the login interface, which allows for access to account information. It also covers the web browser feature. It also covers certain functional requirements such as being able to run on a web browser and it is an interface with the database of showtimes and tickets available. 
ID: ErrorRecovery
Description: This test aims to ensure that the online theater ticketing system is able to recover from any unexpected errors such as server downtime or network failures. It is a test dedicated to system testing. The test is crucial for the system to run smoothly and maintain system reliability. It will allow the user to have an uninterrupted and smooth experience with the system. 
Test Sets/Vectors: This test is designed to verify that the system can smoothly recover from any unexpected errors. One test set includes simulating server downtime. This test set will take the approaches of temporarily simulating a system outage and observing how the system responds. Another test set includes simulating network failures. This test set will take the approaches of temporarily causing network disruptions and seeing how the system resists and it will review how users interact with the system under a network disconnection.
How does it cover the targeted features?: This test covers all of the targeted features of the system. It evaluates how the system recovers to any unexpected errors and changes will be made to ensure reliability. It also covers certain functional requirements including being able to run on a web browser successfully.
